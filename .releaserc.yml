branches:
  - main

plugins:
  - - "@semantic-release/commit-analyzer"
    - preset: conventionalcommits
      # defaultReleaseRules: true # You have custom rules, so this is likely overridden or not needed if all cases are covered
      parserOpts:
        noteKeywords:
          - BREAKING CHANGE
          - BREAKING CHANGES
          - BREAKING
      releaseRules:
        - type: feature
          release: minor
        - type: docs
          scope: docs-*
          release: minor
        - type: docs
          release: false
        - type: data
          release: patch
        - type: ci
          scope: ci-*
          release: patch
        - type: chore
          release: false
        - type: no-release
          release: false
        - type: test
          release: false

  - - "@semantic-release/release-notes-generator"
    - preset: conventionalcommits
      parserOpts:
        noteKeywords:
          - BREAKING CHANGE
          - BREAKING CHANGES
          - BREAKING
      writerOpts:
        commitsSort:
          - subject
          - scope
      presetConfig:
        types:
          - { type: "feat", section: "🍕 Features", hidden: false }
          - { type: "feature", section: "🍕 Features", hidden: false } # Keep both if you use both
          - { type: "fix", section: "🐛 Bug Fixes", hidden: false }
          - { type: "perf", section: "🔥 Performance Improvements", hidden: false }
          - { type: "revert", section: "⏩ Reverts", hidden: false }
          - { type: "docs", section: "📝 Documentation", hidden: false } # Will show even if release: false
          - { type: "style", section: "🎨 Styles", hidden: true } # Example: hide style changes from notes
          - { type: "refactor", section: "🧑‍💻 Code Refactoring", hidden: false }
          - { type: "test", section: "✅ Tests", hidden: true } # Example: hide test changes
          - { type: "build", section: "🤖 Build System", hidden: false }
          - { type: "ci", section: "🔁 Continuous Integration", hidden: false }
          - { type: "data", section: "💾 Data Updates", hidden: false } # Added for your 'data' type

  - - "@semantic-release/changelog"
    - changelogTitle: |
        # 📦 Changelog
        [![conventional commits](https://img.shields.io/badge/conventional%20commits-1.0.0-yellow.svg)](https://conventionalcommits.org)
        [![semantic versioning](https://img.shields.io/badge/semantic%20versioning-2.0.0-green.svg)](https://semver.org)
        > All notable changes to this project will be documented in this file

  - - "@semantic-release/exec"
    - prepareCmd: 'poetry version ${nextRelease.version} && poetry build'

  - - "@semantic-release/git"
    - assets:
        - LICENSE*
        - CHANGELOG.md
        - pyproject.toml
      message: |
        chore(${nextRelease.type}): ${nextRelease.version} [skip ci]

        ${nextRelease.notes}

  - - "@semantic-release/github"
    - addReleases: bottom
      assets: 
        - path: dist/*.whl
          label: "Python Wheel"
        - path: dist/*.tar.gz
          label: "Source Distribution (sdist)"
        # - path: "./dist/**/*.{msi,deb,rpm,AppImage,dmg,sha256sum,bin,exe}" # Keep if you generate these
      successComment: false
      failTitle: false